categories: []
content: This guide shows you ow to create custom function calls on Astro
created: '2022-10-30T08:17:33.093Z'
guideIntegrations:
  discordRoleIds: []
guideType: onboarding
key: 25b67f02-6526-420b-b0f7-8b32d641d5dc
name: Custom Function Calls on AstroDA
publishStatus: Live
showIncorrectOnCompletion: true
steps:
  - content: >-
      ## **What are Custom Function Calls?**


      Every UI Dapp has in-built features that can be used to perform certain
      functions. However, there are some functions that are not included on the
      UI(to limit the scope of work) and would require calling smart contract
      functions(creating “custom functions” in Astro) to perform such
      operations.


      On [AstroDAO](https://app.astrodao.com/), the interface is designed to
      interact with sputnik smart contracts so that DAOs can perform various
      functions like creating a proposal within the DAO, funding the DAO,
      creating polls, and creating bounties. This allows DAOs to manage their
      affairs more efficiently and with less hassle. These functions have been
      built into the interface and with the click of a button, DAOs can perform
      various functions (some of which have been highlighted above) that are
      part of the regular activities of the DAOs.


      There are however cases where a DAO needs to perform other functions that
      are not part of what the AstroDAO interface provides such as interacting
      with other DAOs in terms of voting on the proposals of other DAOs or
      sending vote requests to other DAOs. Such functions do not have a
      predefined UI to complete them so they are done by creating **custom**
      **function calls** on AstroDAO.


      An example is DAOcubator DAO voting on a proposal in another DAO such as
      DoDAO. In this guide, you’ll learn how to create simple custom function
      calls on AstroDAO.
    name: What are Custom Function Calls?
    stepItems: []
    uuid: 5adba515-ae68-480f-9e55-1707e5a5ae2f
  - content: ''
    name: Evaluation
    stepItems:
      - answerKeys:
          - '61152031'
        choices:
          - content: To carry out poll voting
            key: edd2b557
          - content: To aid creation of proposals
            key: 37631aaa
          - content: To perform functions that are not available on the AstroDAO UI
            key: '61152031'
          - content: To perform functions that are on the AstroDAO UI
            key: bf614919
        content: >-
          Which of these is a reason for having custom function calls on
          AstroDAO?
        type: SingleChoice
        uuid: a1539f69-0f5e-4a13-943a-5c7ac03c3007
    uuid: a33fd9f1-6e60-4dea-8407-1fb44c6ab803
  - content: >
      ## **Use Case 1 - Voting on Proposals**


      Generally, voting is one of the key activities of DAOs and AstroDAO has
      provided a very simple interface that allows members of DAOs to vote on
      proposals by the DAO of which they are a part. There are also other cases
      where a DAO could be a member of the council of another DAO and therefore,
      has the right to vote on proposals in the other DAO. 


      In this case, the AstroDAO User Interface (UI) does not provide a visual
      way to go through the process of voting. So, to complete this function, a
      custom function call has to be triggered on AstroDAO. 


      **Example Use Case**

      We want to create a Poll in DAOCubator University and want another
      DAO(DoDAO) to vote on it


      Details:-

      * Given - DoDAO is a council member of DAOCubator University 

      * We want to now create a poll on DAOCubator University and want
      DoDAO(which is a DAO) to be able to vote in the poll

      * For this DoDAO(a DAO) will create a proposal of type “Custom Function
      Call” and will populate the required information which links the
      DAOCubator University’s poll 

      * Members vote on that “Custom Function Call” proposal, and if it passes,
      then it is counted as a vote on DAOCubator University’s poll  


      The following steps will show you how to create a function call on DoDAO
      linked to a Poll created on DAOCubator University. All steps shown below
      are for test purposes.


      **Create a Poll on DAOCubator**

      1. Visit the DAOCubator page on AstroDAO and click on the green ‘+’ sign

      <div align="center">

      <img
      src="https://raw.githubusercontent.com/DoDAO-io/dodao-daocubator-guides/main/images/custom_function_calls/create_new_proposal.jpg"
      alt="Add a Proposal"/>

      </div>


      2. Create a Poll on DAOCubator by selecting “Propose a Poll”

      <div align="center">

      <img
      src="https://raw.githubusercontent.com/DoDAO-io/dodao-daocubator-guides/main/images/custom_function_calls/propose_a_poll.jpg"
      alt="Propose a Poll"/>

      </div>


      3. Fill in the description and click on “Propose”

      <div align="center">

      <img
      src="https://raw.githubusercontent.com/DoDAO-io/dodao-daocubator-guides/main/images/custom_function_calls/propose_a_poll_completed.jpg"
      alt="Propose a Poll Completed"/>

      </div>


      **Create a “Function Call” proposal on DoDAO**

      4. Open DoDAO and click on proposal type and select Function Call

      <div align="center">

      <img
      src="https://raw.githubusercontent.com/DoDAO-io/dodao-daocubator-guides/main/images/custom_function_calls/function_call.jpg"
      alt="Function Call"/>

      </div>


      5. Fill in the description of the proposal, input the smart contract
      address, Method Name, and JSON code

      * Description: Sample: Vote on this Proposal

      * Link: The link to the poll created on
      [DAOCubator](https://app.astrodao.com/dao/test-daocubator-university.sputnik-dao.near/proposals/test-daocubator-university.sputnik-dao.near-3)

      * Smart Contract Address: test-daocubator-university.sputnik-dao.near

      * Method: act_proposal

      * JSON: Write the JSON code using the proposal ID number when creating the
      proposal to vote on the proposal. You can either approve or reject by
      writing the following code snippet:

              **For Approval:**
              {

              "id": proposalId,

              "action": "VoteApprove"

              }

              **For Rejection:**
              {

              "id": proposalId,

              "action": "VoteReject"

              }

      In this case, we will approve the proposal

      <div align="center">

      <img
      src="https://raw.githubusercontent.com/DoDAO-io/dodao-daocubator-guides/main/images/custom_function_calls/details_on_the_function_call.jpg"
      alt="Details on Function Call"/>

      </div>


      6. Leave the value of TGas as 150 and click on “**Propose**”.


      **Vote on “Function Call” Proposal**

      7. Vote on the Custom Function Call Proposal created for it to be
      approved.

      <div align="center">

      <img
      src="https://raw.githubusercontent.com/DoDAO-io/dodao-daocubator-guides/main/images/custom_function_calls/function_call_approved.jpg"
      alt="Function Call Approved"/>

      </div>


      **See DoDAO’s vote on DAOCubator University’s poll** 

      8. Finally, see the poll and you will see DoDAO’s vote on it.

      <div align="center">

      <img
      src="https://raw.githubusercontent.com/DoDAO-io/dodao-daocubator-guides/main/images/custom_function_calls/test_poll.jpg"
      alt="Completed Poll"/>

      </div>


      Congratulations! The voting process is complete.
    name: Use Case 1 - Voting on Proposals
    stepItems: []
    uuid: dcbb0044-4b96-4159-8467-d35e672ec60d
  - content: ''
    name: Evaluation
    stepItems:
      - answerKeys:
          - fb98c3c6
        choices:
          - content: Funding a DAO
            key: df905f0e
          - content: Creating a Poll
            key: e81a91f3
          - content: Requesting votes from other DAOs
            key: fb98c3c6
          - content: Creating Bounties
            key: 716ca35f
        content: Which of these is not a pre-built function on AstroDAO?
        type: SingleChoice
        uuid: 663631c6-d617-432a-a76f-c0876b514a16
      - answerKeys:
          - 0ef3b4ed
        choices:
          - content: Voting on Proposals by a DAO on other DAOs
            key: 0ef3b4ed
          - content: Sending funds to a NEAR wallet
            key: 3722c94f
          - content: Creating a Poll
            key: 378c5df0
          - content: Creating a DAO
            key: fa0d21c0
        content: >-
          An example of a function that can be done with Custom Function Calls
          on AstroDAO is?
        type: SingleChoice
        uuid: 0eb1f9be-38c0-4176-8b05-b3e2785034d6
      - answerKeys:
          - 2fe7c989
        choices:
          - content: Description
            key: 3fd4dca8
          - content: Smart Contract Address
            key: d3654aea
          - content: Method
            key: 965fa64e
          - content: TGas
            key: 2fe7c989
        content: >-
          When creating a Function Call on AstroDAO, which of these is NOT a
          field to be filled out?
        type: SingleChoice
        uuid: affd644a-8013-4b7e-a0bf-7b249503fea1
    uuid: 838c7b23-e079-4ab5-af6b-c1be3b2e4831
  - content: >
      ## **Use Case 2 - Send Vote Request to other DAOs**


      Another use case for a Custom Function call can be when a DAO on AstroDAO
      sends a voting request to another DAO to vote on a proposal by creating a
      custom function call. This process works for DAOs who are Council members
      of the DAO the proposal was created for.


      For example, assuming DAOCubator is a member of the Council at DoDAO, we
      can send a Custom Function Call to DAOCubator to vote on a proposal
      created on DoDAO.


      To engage in this process, follow the steps highlighted below:


      1. Go to the DAO page that you want to request a vote from. In this case,
      that will be DAOCubator, and click on the green ‘+’ sign.

      <div align="center">

      <img
      src="https://raw.githubusercontent.com/DoDAO-io/dodao-daocubator-guides/main/images/custom_function_calls/create_new_proposal.jpg"
      alt="Add a Proposal"/>

      </div>


      2. Select Function Call from the Proposal Type drop-down menu

      <div align="center">

      <img
      src="https://raw.githubusercontent.com/DoDAO-io/dodao-daocubator-guides/main/images/custom_function_calls/function_call.jpg"
      alt="Function Call"/>

      </div>


      3. Input the description of the proposal, a link to the proposal to be
      voted on, input the smart contract address, Method Name, and JSON code
      just like in the previous step

      * Description: Sample: Requesting a vote from your DAO on this Proposal

      * Link: This should be a link to the poll to be voted on e.g.
      samplelink.dodao.sputnik-dao.near/292

      * Smart Contract Address: dodao.sputnik-dao.near

      * Method: act_proposal

      * JSON: Write the JSON code using the proposal ID number when creating the
      proposal to vote on the proposal. You can either approve or reject by
      writing the following code snippet:

              **For Approval:**
              {

              "id": proposalId,

              "action": "VoteApprove"

              }

              **For Rejection:**
              {

              "id": proposalId,

              "action": "VoteReject"

              }

      <div align="center">

      <img
      src="https://raw.githubusercontent.com/DoDAO-io/dodao-daocubator-guides/main/images/custom_function_calls/request_a_vote_from_other_DAOs.jpg"
      alt="Request Vote from other DAOs"/>

      </div>


      4. Leave the value of TGas as 150 and click on “**Propose**”.


      The DAO (DAOCubator) will now be able to vote on the proposal sent for
      voting.
    name: Use Case 2 - Send Vote Request
    stepItems: []
    uuid: 3e4f35e4-5342-4170-b19e-c44537c5ba5f
  - content: ''
    name: Evaluation
    stepItems:
      - answerKeys:
          - e3fe46ac
        choices:
          - content: A link to the smart contract
            key: dea67c3a
          - content: A link to the poll to be voted on
            key: e3fe46ac
          - content: A link to the DAO
            key: 950ec4b4
          - content: A link to the proposer address
            key: dd5118d5
        content: >-
          When sending a voting request to a DAO, what information is provided
          in the link field?
        type: SingleChoice
        uuid: 844122dd-b2d2-4ba6-ba18-1acd4d77041f
      - answerKeys:
          - 2bcb7926
        choices:
          - content: Text
            key: 8311a507
          - content: Date
            key: 0cea893f
          - content: Complex code
            key: e60ff7a9
          - content: Number
            key: 2bcb7926
        content: The format for the “ID” provided in the JSON code is?
        type: SingleChoice
        uuid: 83c5c6b8-4a22-4ea9-92db-2814d00a480c
      - answerKeys:
          - cd256834
        choices:
          - content: '50'
            key: 4f4147e0
          - content: '80'
            key: bf3ea550
          - content: '150'
            key: cd256834
          - content: '100'
            key: 3f310f16
        content: What is the value of the TGas when creating a custom function call?
        type: SingleChoice
        uuid: c23be4b8-36fb-4d7c-bdcf-b1bba5f8fa70
    uuid: 2db7173d-c684-476f-88da-d543c59b32e7
  - content: >
      ## **Conclusion**


      We have learnt how to simply create custom function calls in this guide
      when it comes to voting on proposals and inviting other DAOs to vote on
      proposals created by the inviting DAO. For more information about how to
      work with Custom Function Calls on AstroDAO, kindly watch this
      [video](https://youtu.be/x4wxon7NX4w).


      Some other use cases for function calls on Astro include:

      * Buy NFT from Mintbase

      * Buy NFT from Paras

      * Transfer NFT from another DAO


      This means that DAOs can now buy or mint NFTs directly from AstroDAO. By
      just writing a simple function call, the function can be performed easily.
      This is why function calls are quite incredible.


      You can now go ahead and create your own custom function calls at any time
      of your choice.
    name: Conclusion
    stepItems: []
    uuid: 55863097-cb84-48cc-bd5d-eb391769ec36
thumbnail: >-
  https://d31h13bdjwgzxs.cloudfront.net/QmWy8EeMnxqx96VEPx2NBwzqtKxvMQqVVYvmPKgAYS2cUi
uuid: 25b67f02-6526-420b-b0f7-8b32d641d5dc
